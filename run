#! /bin/bash

ipara=$(awk '/iparallel/{print $1}' spectra_heom.inp)
iflow=$(awk '/iflow/{print $1}' spectra_heom.inp)
imaxproc=$(awk '/iproc/{print $1}' spectra_heom.inp)
iwait=$(awk '/iwait/{print $1}' spectra_heom.inp)

crdir()
{
  for((i=1;i<=$ipara;i++)); do
    if [ -d $i ]; then
      rm -r $i
      mkdir $i
    else
      mkdir $i
    fi
    cd $i
    cp ../aout .
    cp ../*.inp .
    cp ../sub.sh .
    echo $i > ifolder.inp
    njobs=$(qstat|grep amber|grep -c R)
    while [ $njobs -ge $imaxproc ]
    do
        ## wait for 2 mins and recheck  status of jobs
        sleep $iwait
        njobs=$(qstat|grep iitb|grep -c R)
    done
    qsub sub.sh
    cd ..
  done
}


avg()
{
  if [ $ipara == 1 ]; then
    echo "Cannot average. Not parallel job",$ipara
  else
    rm dip_mom_corr.out
    for((i=1;i<=$ipara;i++)); do
      cat $i/dip_mom_corr.out >> dip_mom_corr.out
      #file_ra=$file_ra" $i/pop.out"
    done
  fi

}

variation_param()
{
  awk 'NR==1{$1=2}1' AFSSH.inp>save_AFSSH.inp

  while read lineno newvar dire
    do
      mkdir -p $dire
      cd $dire
      cp ../run .
      cp ../sub.sh .
      cp ../*.f* .
      cp ../makefile .
      touch mod*
      awk 'NR==n{$1=x}1' n=$lineno x=$newvar ../save_AFSSH.inp>AFSSH.inp
      ./run
      cd ..
    done < variation.inp
}

if [ $iflow == 1  ]; then
  ### serial execution
  echo "serial execution"
  make
  qsub sub.sh
elif [ $iflow == 2 ];then
  ### parallel execution
  echo "parallel execution, Number of cpus = "$ipara
  make
  crdir
elif [ $iflow == 3 ]; then
  ### average for parallel execution
  echo "Averaging data"
  avg
elif [ $iflow == 4 ]; then
  ### variation to parameters
  echo "Variation to parameters"
  variation_param
else
  echo "no matching iflow",$iflow
fi

